--allow-inter           Allow the generate of intermediate file. This will\n
speed up PRSice when using dosage data as clumping\n
reference and for hard coding PRS calculation\n
--dose-thres            Translate any SNPs with highest genotype probability\n
less than this threshold to missing call\n
--hard-thres            A hardcall is saved when the distance to the nearest\n
hardcall is less than the hardcall threshold.\n
Otherwise a missing code is saved\n
Default is: 0.1\n
--hard                  Use hard coding instead of dosage for PRS construction.\n
Default is to use dosage instead of hard coding\n
\nClumping:\n
--clump-kb              The distance for clumping in kb\n
Default: 250kb (1mb for PRSet)\n
--clump-r2              The R2 threshold for clumping\n
Default: 0.1\n
--clump-p               The p-value threshold use for clumping.\n
Default: 1\n
--ld            | -L    LD reference file. Use for LD calculation. If not\n
provided, will use the post-filtered target genotype\n
for LD calculation. Support multiple chromosome input\n
Please see --target for more information\n
--ld-dose-thres         Translate any SNPs with highest genotype probability\n
less than this threshold to missing call\n
--ld-geno               Filter SNPs based on genotype missingness\n
--ld-hard-thres         A hardcall is saved when the distance to the nearest\n
hardcall is less than the hardcall threshold.\n
Otherwise a missing code is saved\n
Default is: 0.1\n
--ld-info               Filter SNPs based on info score. Only used\n
for imputed LD reference\n
--ld-keep               File containing the sample(s) to be extracted from\n
the LD reference file. First column should be FID and\n
the second column should be IID. If --ignore-fid is\n
set, first column should be IID\n
Mutually exclusive from --ld-remove\n
No effect if --ld was not provided\n
--ld-list               File containing prefix of LD reference files.\n
Similar to --ld but allow more \n
flexibility. Do not support external fam file\n
at the moment\n
--ld-maf                Filter SNPs based on minor allele frequency\n
--ld-remove             File containing the sample(s) to be removed from\n
the LD reference file. First column should be FID and\n
the second column should be IID. If --ignore-fid is\n
set, first column should be IID\n
Mutually exclusive from --ld-keep\n
--ld-type               File type of the LD file. Support bed (binary plink)\n
and bgen format. Default: bed\n
--no-clump              Stop PRSice from performing clumping\n
--proxy                 Proxy threshold for index SNP to be considered\n
as part of the region represented by the clumped\n
SNP(s). e.g. --proxy 0.8 means the index SNP will\n
represent region of any clumped SNP(s) that has a\n
R2>=0.8 even if the index SNP does not physically\n
locate within the region\n
\nCovariate:\n
--cov           | -C    Covariate file. First column should be FID and \n
the second column should be IID. If --ignore-fid\n
is set, first column should be IID\n
--cov-col       | -c    Header of covariates. If not provided, will use\n
all variables in the covariate file. By adding\n
@ in front of the string, any numbers within [\n
and ] will be parsed. E.g. @PC[1-3] will be\n
read as PC1,PC2,PC3. Discontinuous input are also\n
supported: @cov[1.3-5] will be parsed as \n
cov1,cov3,cov4,cov5\n
--cov-factor            Header of categorical covariate(s). Dummy variable\n
will be automatically generated. Any items in\n
--cov-factor must also be found in --cov-col\n
Also accept continuous input (start with @).\n
\nP-value Thresholding:\n
--bar-levels            Level of barchart to be plotted. When --fastscore\n
is set, PRSice will only calculate the PRS for \n
threshold within the bar level. Levels should be\n
comma separated without space\n
--fastscore             Only calculate threshold stated in --bar-levels\n
--no-full               By default, PRSice will include the full model, \n
i.e. p-value threshold = 1. Setting this flag will\n
disable that behaviour\n
--interval      | -i    The step size of the threshold. Default: 0.00005\n
--lower         | -l    The starting p-value threshold. Default: 5e-8\n
--model                 Genetic model use for regression. The genetic\n
encoding is based on the base data where the\n
encoding represent number of the coding allele\n
Available models include:\n
add - Additive model, code as 0/1/2 (default)\n
dom - Dominant model, code as 0/1/1\n
rec - Recessive model, code as 0/0/1\n
het - Heterozygous only model, code as 0/1/0\n
--missing               Method to handle missing genotypes. By default, \n
final scores are averages of valid per-allele \n
scores with missing genotypes contribute an amount\n
proportional to imputed allele frequency. To throw\n
out missing observations instead (decreasing the\n
denominator in the final average when this happens),\n
use the 'SET_ZERO' modifier. Alternatively,\n
you can use the 'CENTER' modifier to shift all scores\n
to mean zero. \n
--no-regress            Do not perform the regression analysis and simply\n
output all PRS.\n
--score                 Method to calculate the polygenic score.\n
Available methods include:\n
avg     - Take the average effect size (default)\n
std     - Standardize the effect size \n
con-std - Standardize the effect size using mean \n
and sd derived from control samples\n
sum     - Direct summation of the effect size \n
--upper         | -u    The final p-value threshold. Default: 0.5\n
\nPRSet:\n
--background            String to indicate a background file. This string\n
should have the format of Name:Type where type can be\n
bed   - 0-based range with 3 column. Chr Start End\n
range - 1-based range with 3 column. Chr Start End\n
gene  - A file contain a column of gene name\n
--bed           | -B    Bed file containing the selected regions.\n
Name of bed file will be used as the region\n
identifier. WARNING: Bed file is 0-based\n
--feature               Feature(s) to be included from the gtf file.\n
Default: exon,CDS,gene,protein_coding.\n
--full-back             Use the whole genome as background for competitive\n
p-value calculation\n
--gtf           | -g    GTF file containing gene boundaries. Required\n
when --msigdb is used\n
--msigdb        | -m    MSIGDB file containing the pathway information.\n
Require the gtf file\n
--snp-set               Provide a SNP set file containing the snp set(s).\n
Two different file format is allowed:\n
SNP list format - A file containing a single\n
column of SNP ID. Name of the\n
set will be the file name or\n
can be provided using \n
--snp-set File:Name\n
MSigDB format   - Each row represent a single SNP \n
set with the first column \n
containing the name of the SNP\n
set.\n
--wind-3                Add N base(s) to the 3' region of each feature(s) \n
--wind-5                Add N base(s) to the 5' region of each feature(s) \n
\nPlotting:\n
--bar-col-high          Colour of the most predicting threshold\n
Default: firebrick\n
--bar-col-lower         Colour of the poorest predicting threshold\n
Default: dodgerblue\n
--bar-col-p             Change the colour of bar to p-value threshold\n
instead of the association with phenotype\n
--bar-palatte           Colour palatte to be used for bar plotting when\n
--bar_col_p is set. Default: YlOrRd\n
--device                Select different plotting devices. You can choose\n
any plotting devices supported by base R.\n
Default: png\n
--multi-plot            Plot the top N phenotype / gene set in a\n
summary plot\n
--plot                  When set, will only perform plotting.\n
--plot-set              Define the gene set to be plot. Default: Base\n
--quantile      | -q    Number of quantiles to plot. No quantile plot\n
will be generated when this is not provided.\n
--quant-break           Quantile groupings for plotting the strata plot\n
--quant-extract | -e    File containing sample ID to be plot on a separated\n
quantile e.g. extra quantile containing only \n
schizophrenia samples. Must contain IID. Should\n
contain FID if --ignore-fid isn't set.\n
--quant-ref             Reference quantile for quantile plot\n
--scatter-r2            y-axis of the high resolution scatter plot should be R2\n
\nMisc:\n
--all-score             Output PRS for ALL threshold. WARNING: This\n
will generate a huge file\n
--chr-id                Try to construct an RS ID for SNP based on its\n
chromosome, coordinate, effective allele and \n
non-effective allele.\n
e.g. c:L-aBd is translated to: \n
<chr>:<coordinate>-<effective><noneffective>d\n
This is always true for target file, whereas for\n
base file, this is only used if the RS ID \n
wasn't provided\n
--exclude               File contains SNPs to be excluded from the\n
analysis\n
--extract               File contains SNPs to be included in the \n
analysis\n
--id-delim              This parameter causes sample IDs to be parsed as\n
<FID><delimiter><IID>; the default delimiter\n
is '_'. \n
--ignore-fid            Ignore FID for all input. When this is set,\n
first column of all file will be assume to\n
be IID instead of FID\n
--keep-ambig            Keep ambiguous SNPs. Only use this option\n
if you are certain that the base and target\n
has the same A1 and A2 alleles\n
--logit-perm            When performing permutation, still use logistic\n
regression instead of linear regression. This\n
will substantially slow down PRSice\n
--memory                Maximum memory usage allowed (in Mb). PRSice will try\n
its best to honor this setting\n
--non-cumulate          Calculate non-cumulative PRS. PRS will be reset\n
to 0 for each new P-value threshold instead of\n
adding up\n
--out           | -o    Prefix for all file output\n
--perm                  Number of permutation to perform. This swill\n
generate the empirical p-value. Recommend to\n
use value larger than 10,000\n
--print-snp             Print all SNPs that remains in the analysis \n
after clumping is performed. For PRSet, Y \n
indicate the SNPs falls within the gene set \n
of interest and N otherwise. If only PRSice \n
is performed, a single \"gene set\" called \n
\"Base\" will be presented with all entries\n
marked as Y\n
--seed          | -s    Seed used for permutation. If not provided,\n
system time will be used as seed. When same\n
seed and same input is provided, same result\n
can be generated\n
--thread        | -n    Number of thread use\n
--use-ref-maf           When specified, missingness imputation will be\n
performed based on the reference samples\n
--ultra                 Ultra aggressive memory usage. When this is enabled\n
PRSice and PRSet will try to load all genotypes into\n
memory after clumping is performed. This should\n
drastically speed up PRSice and PRSet at the expense\n
of higher memory consumption.\n
Has no effect for dosage score\n
--x-range               Range of SNPs to be excluded from the whole\n
analysis. It can either be a single bed file\n
or a comma seperated list of range. Range must\n
be in the format of chr:start-end or chr:coordinate\n
--help          | -h    Display this help message\n"
if (!exists('startsWith', mode = 'function')) {
startsWith <- function(x, prefix) {
return(substring(x, 1, nchar(prefix)) == prefix)
}
}
libraries <-
c("ggplot2",
"data.table",
"optparse",
"methods",
"tools",
"grDevices",
"RColorBrewer")
found.library.dir <- FALSE
argv <- commandArgs(trailingOnly = TRUE)
dir.arg.idx <- grep("--dir",argv)
no.install <- length(grep("--no-install", argv)) > 0
if (length(dir.arg.idx) != 0) {
dir.arg.idx <- dir.arg.idx + 1
found.library.dir <- TRUE
}
# INSTALL_PACKAGE: Functions for automatically install all required packages
InstalledPackage <- function(package) {
available <- suppressMessages(suppressWarnings(
sapply(
package,
require,
quietly = TRUE,
character.only = TRUE,
warn.conflicts = FALSE
)
))
missing <- package[!available]
if (length(missing) > 0)
return(FALSE)
return(TRUE)
}
CRANChoosen <- function()
{
return(getOption("repos")["CRAN"] != "@CRAN@")
}
UsePackage <- function(package, dir, no.install)
{
if (!InstalledPackage(package))
{
dir.create(file.path(dir, "lib"), showWarnings = FALSE)
.libPaths(c(.libPaths(), paste(dir, "/lib", sep = "")))
if (!InstalledPackage(package) & !no.install) {
if (is.na(dir)) {
writeLines("WARNING: dir not provided, cannot install the required packages")
return(FALSE)
} else{
writeLines(paste(
"Trying to install ",
package,
" in ",
dir,
"/lib",
sep = ""
))
}
suppressMessages(suppressWarnings(
install.packages(
package,
lib = paste(dir, "/lib", sep = ""),
repos = "http://cran.rstudio.com/",
quiet = T
)
))
}
if (!InstalledPackage(package))
return(FALSE)
}
return(TRUE)
}
use.data.table <- T
use.ggplot <- T
for (library in libraries)
{
package.directory <- "."
if (found.library.dir) {
package.directory <- argv[dir.arg.idx]
}
if (!UsePackage(library, package.directory, no.install))
{
if (library == "data.table") {
use.data.table <- F
writeLines("Cannot install data.table, will fall back and use read.table instead")
writeLines("Note: It will be slower when reading large files")
} else if (library == "ggplot2") {
use.ggplot <- F
writeLines("Cannot install ggplot2, will fall back and native plotting devices")
writeLines("Note: The legends will be uglier")
} else{
stop("Error: ", library, " cannot be load nor install!")
}
}
}
# We don't type the help message here. Will just directly use the usage information from c++
# See the Help Messages section for more information
option_list <- list(
# Base file
make_option(c("--A1"), type = "character"),
make_option(c("--A2"), type = "character"),
make_option(c("--a1"), type = "character"),
make_option(c("--a2"), type = "character"),
make_option(c("-b", "--base"), type = "character"),
make_option(c("--base-info"), type = "character", dest = "base_info"),
make_option(c("--base-maf"), type = "character", dest = "base_maf"),
make_option(c("--beta"), action = "store_true"),
make_option(c("--bp"), type = "character"),
make_option(c("--chr"), type = "character"),
make_option(c("--index"), action = "store_true"),
make_option(c("--no-default"), action = "store_true", dest = "no_default"),
make_option(c("--or"), action = "store_true"),
make_option(c("-p", "--pvalue"), type = "character"),
make_option(c("--snp"), type = "character"),
make_option(c("--stat"), type = "character"),
# Target file
make_option(c("--binary-target"), type = "character", dest = "binary_target"),
make_option(c("--geno"), type = "numeric"),
make_option(c("--info"), type = "numeric"),
make_option(c("--keep"), type = "character"),
make_option(c("--maf"), type = "numeric"),
make_option(c("--nonfounders"), action = "store_true", dest = "nonfounders"),
make_option(c("--pheno-col"), type = "character", dest = "pheno_col"),
make_option(c("--pheno-file"), type = "character", dest = "pheno_file"),
make_option(c("-f", "--pheno"), type = "character", dest = "pheno_file"),
make_option(c("-k", "--prevalence"), type = "character"),
make_option(c("--remove"), type = "character"),
make_option(c("-t", "--target"), type = "character"),
make_option(c("--target-list"), type = "character", dest = "target_list"),
make_option(c("--type"), type = "character"),
# Dosage
make_option(c("--allow-inter"), action = "store_true", dest = "allow_inter"),
make_option(c("--hard-thres"), type = "numeric", dest = "hard_thres"),
make_option(c("--dose-thres"), type = "numeric", dest = "dose_thres"),
make_option(c("--hard"), action = "store_true"),
# Clumping
make_option(c("--clump-kb"), type = "character", dest = "clump_kb"),
make_option(c("--clump-r2"), type = "numeric", dest = "clump_r2"),
make_option(c("--clump-p"), type = "numeric", dest = "clump_p"),
make_option(c("-L", "--ld"), type = "character"),
make_option(c("--ld-list"), type = "character", dest = "ld_list"),
make_option(c("--ld-geno"), type = "numeric", dest = "ld_geno"),
make_option(c("--ld-info"), type = "numeric", dest = "ld_info"),
make_option(c("--ld-hard-thres"), type = "numeric", dest = "ld_hard_thres"),
make_option(c("--ld-dose-thres"), type = "numeric", dest = "ld_dose_thres"),
make_option(c("--ld-keep"), type = "character", dest = "ld_keep"),
make_option(c("--ld-maf"), type = "numeric", dest = "ld_maf"),
make_option(c("--ld-remove"), type = "character", dest = "ld_remove"),
make_option(c("--ld-type"), type = "character", dest = "ld_type"),
make_option(c("--no-clump"), action = "store_true", dest = "no_clump"),
make_option(c("--proxy"), type = "numeric"),
# Covariates
make_option(c("-c", "--cov-col"), type = "character", dest = "cov_col"),
make_option(c("--cov-file"), type = "character", dest = "cov_file"),
make_option(c("-C", "--cov"), type = "character", dest = "cov_file"),
make_option(c("--cov-factor"), type = "character", dest = "cov_factor"),
# P-thresholding
make_option(
c("--bar-levels"),
type = "character",
dest = "bar_levels"
),
make_option(c("--fastscore"), action = "store_true"),
make_option(c("--no-full"), action = "store_true"),
make_option(c("-i", "--interval"), type = "numeric"),
make_option(c("-l", "--lower"), type = "numeric"),
make_option(c("--model"), type = "character"),
make_option(c("--missing"), type = "character"),
make_option(c("--no-regress"), action = "store_true", dest = "no_regress"),
make_option(c("--score"), type = "character"),
make_option(c("-u", "--upper"), type = "numeric"),
# PRSet
make_option(c("-B", "--bed"), type = "character"),
make_option(c("--background"), type = "character"),
make_option(c("--feature"), type = "character"),
make_option(c("--full-back"), action = "store_true", dest = "full_back"),
make_option(c("-g", "--gtf"), type = "character"),
make_option(c("-m", "--msigdb"), type = "character"),
make_option(c("--set-perm"), type = "numeric", dest = "set_perm"),
make_option(c("--wind-5"), type = "character", dest = "wind_5"),
make_option(c("--wind-3"), type = "character", dest = "wind_3"),
make_option(c("--snp-set"), type = "character", dest = "snp_set"),
# Misc
make_option(c("--all-score"), action = "store_true", dest = "all_score"),
make_option(c("--ultra"), action = "store_true"),
make_option(c("--chr-id"), type = "character", dest = "chr_id"),
make_option(c("--exclude"), type = "character"),
make_option(c("--extract"), type = "character"),
make_option(c("--enable-mmap"), action = "store_true", dest = "enable_mmap"),
make_option(c("--ignore-fid"), action = "store_true", dest = "ignore_fid"),
make_option(c("--id-delim"), type = "character"),
make_option(c("--logit-perm"), action = "store_true", dest = "logit_perm"),
make_option(c("--keep-ambig"), action = "store_true", dest = "keep_ambig"),
make_option(c("--flip-ambig"), action = "store_true", dest = "flip_ambig"),
make_option(c("--memory"), type = "character", dest="memory"),
make_option(c("-o", "--out"), type = "character", default = "PRSice"),
make_option(c("--perm"), type = "numeric"),
make_option(c("-s", "--seed"), type = "numeric"),
make_option(c("--print-snp"), action = "store_true", dest = "print_snp"),
make_option(c("--non-cumulate"), action = "store_true", dest = "non_cumulate"),
make_option(c("-n", "--thread"), type = "numeric"),
make_option(c( "--num-auto"), type = "numeric"),
make_option(c("--use-ref-maf"), action = "store_true", dest = "use_ref_maf"),
make_option(c("--x-range"), type = "character", dest = "x_range"),
#R Specified options
make_option(c("--plot"), action = "store_true"),
make_option(c("--quantile", "-q"), type = "numeric"),
make_option(c("--quant-break"), type = "character", dest = "quant_break"),
make_option(c("--multi-plot"), type = "numeric", dest = "multi_plot"),
make_option(c("--plot-set"),
type = "character",
dest = "plot_set",
default = "Base"),
make_option(c("--quant-pheno"), action = "store_true", dest = "quant_pheno"),
make_option(c("--quant-extract", "-e"), type = "character", dest = "quant_extract"),
make_option("--quant-ref", type = "numeric", dest = "quant_ref"),
make_option("--scatter-r2",
action = "store_true",
default = F,
dest = "scatter_r2"),
make_option("--bar-col-p",
action = "store_true",
default = F,
dest = "bar_col_p"),
make_option("--bar-col-low",
type = "character",
default = "dodgerblue",
dest = "bar_col_low"),
make_option("--bar-col-high",
type = "character",
default = "firebrick",
dest = "bar_col_high"),
make_option("--bar-palatte",
type = "character",
default = "YlOrRd",
dest = "bar_palatte"),
make_option("--prsice", type = "character"),
make_option("--device", type = "character", default = "png"),
make_option("--dir", type = "character")
)
source("~/Bioinformatics/3rd_semester/IBP/PRSice_trial/PRSice.R", echo=TRUE)
source("~/Bioinformatics/3rd_semester/IBP/PRSice_trial/PRSice.R", echo=TRUE)
set.seed(1919)                                 # Create example data
x1 <- rnorm(1000)
y1 <- x1 + rnorm(1000)
plot(x1,y1)
library(pscl)
install.packages("pscl")
library(pscl)
install.packages('pscl', repos='https://cran.r-project.org/package=pscl')
install.packages('pscl', repos='http://cran.us.r-project.org')
setwd('bacterialGrowth_thesis/Data/experiments/RI/RI_batch_mucin2/RI_batch_mucin2_1/')
data <- read.table('growth_data.txt', header=T)
plot(data)
setwd('~/bacterialGrowth_thesis/DataParsed')
data <- read.table('RI_batch_mucin2_1.txt', header=T)
plot(data$time, data$liquidtotalcount)
title('liquid total count')
plot(data$time, data$liquidtotalcount)
x <- data$time
y1 <- data$liquidtotalcount
y2 <- data$liquidactivecount
y3 <- data$attachedactivecount
y <- data$OD
par(mfrow=c(2,1))
plot(x, y, ylab="OpticalDensity600nm", xlab="time(hours)")
title('Bacterial growth: RI_batch_mucin2_1')
plot(x,y1,type="l",col="blue", ylab="cell count per ul", xlab="time(hours)")
lines(x,y2,col="red")
lines(x,y3,col="green")
metabolites <- colnames(data)[!colnames(data) %in% c("time","OD","pH","liquidtotalcount","liquidactivecount","attachedtotalcount")]
metabolites_data <- data[, c("time",metabolites)]
# plotcolors <- c("red","orange", "gold","yellow","light green","dark green","cyan","light blue",
#                 "dark blue", "light purple", "dark purple","gray","black")
plotcolors <- brewer.pal(12,'Paired')
par(mfrow=c(1,1))
for (i in c(2:length(metabolites_data))) {
if(i == 2) {
plot(metabolites_data$time, metabolites_data[,i], type="l", col=plotcolors[i])
} else {
lines(metabolites_data$time, metabolites_data[,i], ylim = c(0:10), col=plotcolors[i])
}
}
plotcolors <- brewer.pal(12,'Paired')
